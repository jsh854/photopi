{"version":3,"sources":["atoms/NavBar.tsx","atoms/Image.tsx","templates/FlexTemplate.tsx","molecules/Card.tsx","pages/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NavBar","className","Image","height","width","rounded","href","downloadHref","target","download","src","style","borderRadius","memo","FlexTemplate","children","Card","Home","useState","newData","changeData","CLIENT_ID","process","REACT_APP_API_KEY","URL","data","useSWR","url","axios","then","res","refreshInterval","useEffect","map","i","urls","regular","links","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOASeA,EATA,WACf,OACI,qBAAKC,UAAU,cAAf,SACI,oBAAIA,UAAU,YAAd,0B,yCCKFC,EAAQ,SAAC,GAMC,IALZC,EAKW,EALXA,OACAC,EAIW,EAJXA,MAIW,IAHXC,eAGW,SAFfC,EAEe,EAFfA,KACAC,EACe,EADfA,aAEI,OACJ,8BACI,mBAAGD,KAAMC,EAAcC,OAAO,SAASC,UAAQ,EAA/C,SACA,qBAAKC,IAAKJ,EAAMK,MAAO,CAACR,OAAO,GAAD,OAAIA,EAAJ,MAAgBC,MAAM,GAAD,OAAIA,EAAJ,MAAeQ,aAAa,GAAD,OAAIP,EAAU,GAAK,EAAnB,aAKnEQ,iBAAKX,GCTLY,G,MATMD,gBAAK,YAA6B,IAA3BE,EAA0B,EAA1BA,SACxB,OACI,qBAAKd,UAAU,UAAf,SACKc,QCUEC,EAXF,SAAC,GAIC,IAAD,IAHVb,cAGU,MAHH,IAGG,MAFVC,aAEU,MAFJ,IAEI,EADVW,EACU,EADVA,SAEA,OACI,qBAAKJ,MAAO,CAACR,OAAO,GAAD,OAAIA,EAAJ,MAAeC,MAAM,GAAD,OAAIA,EAAJ,OAAgBH,UAAU,YAAjE,SACIc,KCiBGE,EArBFJ,gBAAK,WAAK,IAAD,EACOK,mBAAgB,IADvB,mBACbC,EADa,KACLC,EADK,KAEZC,EAAYC,mIAAYC,kBACxBC,EAAG,uEAAmEH,GAErEI,EAAQC,YAAOF,GADN,SAACG,GAAD,OAAcC,IAAMD,GAAKE,MAAK,SAAAC,GAAG,OAAEA,EAAIL,UACpB,CAC/BM,gBAAiB,QADdN,KAMX,OAHIO,qBAAU,WACPZ,EAAWK,KACR,CAACA,IAEX,cAAC,EAAD,iBACCN,QADD,IACCA,OADD,EACCA,EAASc,KAAI,SAAAC,GAAC,OACX,cAAC,EAAD,UACA,cAAC,EAAD,CAAO5B,KAAM4B,EAAEC,KAAKC,QAASjC,OAAQ,IAAKC,MAAO,IAAKG,aAAc2B,EAAEG,MAAM5B,qBCXjE6B,MAVf,WAEE,OACE,qCACJ,cAAC,EAAD,IACA,cAAC,EAAD,QCKeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAO1BZ,M","file":"static/js/main.5828dcab.chunk.js","sourcesContent":["const NavBar = ()=>{\nreturn(\n    <div className=\"navBar--nav\">\n        <h1 className=\"navBar--a\">Photo-Pie</h1>\n    \n    </div>\n)\n}\n\nexport default NavBar;","import React,{memo} from 'react'\ntype imageProps={\n    height:number;\n    width:number;\n    rounded?:boolean;\n    href:string;\n    downloadHref?:string;\n}\nconst Image = ({\n    height,\n    width,\n    rounded=false,\nhref,\ndownloadHref\n}:imageProps)=>{\n    return(\n<div>\n    <a href={downloadHref} target=\"_blank\" download>\n    <img src={href} style={{height:`${height}px`, width:`${width}px`, borderRadius:`${rounded ? 50 : 0}%`}}/>\n    </a>\n</div>)\n}\n\nexport default memo(Image);","import {memo, ReactNode} from 'react'\nimport './FlexTemplate.css';\ntype templateProps={\n    children : ReactNode \n}\nconst FlexTemplate = memo(({children}:templateProps)=>{\n    return(\n        <div className=\"mainDiv\">\n            {children}\n        </div>\n    )\n\n})\n\nexport default FlexTemplate;","import React, { ReactNode } from 'react'\ntype cardProps={\n    height?:number,\n    width?:number,\n    background?:string,\n    children:ReactNode\n}\nconst Card = ({\n    height=270,\n    width=190,\n    children\n}:cardProps)=>{\n    return(\n        <div style={{height:`${height}px`,width:`${width}px`}} className=\"card--div\">\n           {children}\n        </div>\n    )\n}\nexport default Card;","import {useState,memo,useEffect} from 'react'\nimport './Home.css'\n\nimport axios from 'axios';\nimport useSWR from 'swr';\nimport Image from '../atoms/Image';\nimport FlexTemplate from '../templates/FlexTemplate';\nimport Card from '../molecules/Card';\n\n\nconst Home = memo(()=>{\n  const [newData,changeData]=useState<any[]>([]);\n    const CLIENT_ID = process.env.REACT_APP_API_KEY;\n    const URL = `https://api.unsplash.com/photos?page=1&per_page=30&client_id=${CLIENT_ID}`\n    const fetcher = (url:string)=>axios(url).then(res=>res.data)\n    const {data} = useSWR(URL,fetcher, {\n        refreshInterval: 1000 * 360 *30, \n      });\n    useEffect(()=>{\n       changeData(data)\n        },[data]) \nreturn(\n<FlexTemplate>\n{newData?.map(i=>(\n    <Card>\n    <Image href={i.urls.regular} height={300} width={300} downloadHref={i.links.download}/>\n    </Card>\n))}\n</FlexTemplate>\n);\n})\nexport default Home;","\nimport NavBar from './atoms/NavBar';\nimport Home from './pages/Home';\n\nfunction App() {\n\n  return (\n    <>\n<NavBar/>\n<Home />\n</>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n"],"sourceRoot":""}