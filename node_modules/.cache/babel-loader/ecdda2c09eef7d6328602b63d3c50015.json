{"ast":null,"code":"import{memo}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var Button=function Button(_ref){var _ref$width=_ref.width,width=_ref$width===void 0?130:_ref$width,_ref$height=_ref.height,height=_ref$height===void 0?50:_ref$height,_ref$rounded=_ref.rounded,rounded=_ref$rounded===void 0?true:_ref$rounded,_ref$textcolor=_ref.textcolor,textcolor=_ref$textcolor===void 0?'white':_ref$textcolor,_ref$backgroundcolor=_ref.backgroundcolor,backgroundcolor=_ref$backgroundcolor===void 0?'black':_ref$backgroundcolor,text=_ref.text,onclick=_ref.onclick;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{style:{height:\"\".concat(height,\"px\"),width:\"\".concat(width,\"px\"),backgroundColor:backgroundcolor,color:textcolor,border:'1px solid grey',borderRadius:\"\".concat(rounded?5:0,\"px\"),borderTopLeftRadius:0,borderBottomLeftRadius:0,outline:'none',cursor:'pointer'},onClick:onclick,children:text})});};export default/*#__PURE__*/memo(Button);","map":{"version":3,"sources":["/Users/jshahcodes/projects/photopie-vercel/photopi/src/atoms/Button.tsx"],"names":["memo","Button","width","height","rounded","textcolor","backgroundcolor","text","onclick","backgroundColor","color","border","borderRadius","borderTopLeftRadius","borderBottomLeftRadius","outline","cursor"],"mappings":"AAAA,OAASA,IAAT,KAAqB,OAArB,C,2CAYA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAQE,qBAPZC,KAOY,CAPZA,KAOY,qBAPJ,GAOI,6BANTC,MAMS,CANTA,MAMS,sBANA,EAMA,+BALTC,OAKS,CALTA,OAKS,uBALC,IAKD,kCAJTC,SAIS,CAJTA,SAIS,yBAJG,OAIH,0CAHfC,eAGe,CAHfA,eAGe,+BAHC,OAGD,sBAFTC,IAES,MAFTA,IAES,CADfC,OACe,MADfA,OACe,CACb,mBAAO,kCACH,eACA,KAAK,CAAE,CAACL,MAAM,WAAIA,MAAJ,MAAP,CACPD,KAAK,WAAIA,KAAJ,MADE,CAERO,eAAe,CAACH,eAFR,CAGPI,KAAK,CAACL,SAHC,CAIbM,MAAM,CAAC,gBAJM,CAKPC,YAAY,WAAMR,OAAO,CAAG,CAAH,CAAO,CAApB,MALL,CAMPS,mBAAmB,CAAC,CANb,CAOPC,sBAAsB,CAAC,CAPhB,CASbC,OAAO,CAAC,MATK,CAUPC,MAAM,CAAC,SAVA,CADP,CAYN,OAAO,CAAER,OAZH,UAcKD,IAdL,EADG,EAAP,CAmBH,CA5BD,CA8BA,2BAAeP,IAAI,CAACC,MAAD,CAAnB","sourcesContent":["import { memo } from \"react\";\n\ntype buttonProps={\n    width?:number;\n    height?:number;\n    rounded?:boolean;\n    textcolor?:string;\n\tbackgroundcolor?:string;\n    text:string;\n    onclick?:()=>void;\n}\n\nconst Button = (\n    {width = 130,\n        height = 50,\n        rounded = true,  \n        textcolor = 'white',\n\t\tbackgroundcolor='black',\n        text,\n\t\tonclick\n\t}:buttonProps)=>{\n    return(<div>\n        <button \n        style={{height:`${height}px`,\n        width:`${width}px`,\n       backgroundColor:backgroundcolor,\n        color:textcolor, \n\t\tborder:'1px solid grey' , \n        borderRadius : `${rounded ? 5 : 0}px`,\n        borderTopLeftRadius:0,\n        borderBottomLeftRadius:0,\n        \n\t\toutline:'none',\n        cursor:'pointer'}}\n\t\tonClick={onclick}\n\t\t>\n            {text}\n        </button>\n    </div>)\n\n}\n\nexport default memo(Button);"]},"metadata":{},"sourceType":"module"}