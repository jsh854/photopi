{"ast":null,"code":"var _jsxFileName = \"/Users/jshahcodes/projects/photopie-vercel/photopi/src/atoms/Button.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = ({\n  width = 130,\n  height = 50,\n  rounded = true,\n  textcolor = 'white',\n  backgroundcolor = 'black',\n  text,\n  onclick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        height: `${height}px`,\n        width: `${width}px`,\n        backgroundColor: backgroundcolor,\n        color: textcolor,\n        border: 'none',\n        borderRadius: `${rounded ? 5 : 0}px`,\n        outline: 'none',\n        cursor: 'pointer'\n      },\n      onClick: onclick,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/jshahcodes/projects/photopie-vercel/photopi/src/atoms/Button.tsx"],"names":["Button","width","height","rounded","textcolor","backgroundcolor","text","onclick","backgroundColor","color","border","borderRadius","outline","cursor"],"mappings":";;;AAUA,MAAMA,MAAM,GAAG,CACX;AAACC,EAAAA,KAAK,GAAG,GAAT;AACIC,EAAAA,MAAM,GAAG,EADb;AAEIC,EAAAA,OAAO,GAAG,IAFd;AAGIC,EAAAA,SAAS,GAAG,OAHhB;AAIFC,EAAAA,eAAe,GAAC,OAJd;AAKIC,EAAAA,IALJ;AAMFC,EAAAA;AANE,CADW,KAQE;AACb,sBAAO;AAAA,2BACH;AACA,MAAA,KAAK,EAAE;AAACL,QAAAA,MAAM,EAAE,GAAEA,MAAO,IAAlB;AACPD,QAAAA,KAAK,EAAE,GAAEA,KAAM,IADR;AAERO,QAAAA,eAAe,EAACH,eAFR;AAGPI,QAAAA,KAAK,EAACL,SAHC;AAIbM,QAAAA,MAAM,EAAC,MAJM;AAKPC,QAAAA,YAAY,EAAI,GAAER,OAAO,GAAG,CAAH,GAAO,CAAE,IAL3B;AAMbS,QAAAA,OAAO,EAAC,MANK;AAOPC,QAAAA,MAAM,EAAC;AAPA,OADP;AASN,MAAA,OAAO,EAAEN,OATH;AAAA,gBAWKD;AAXL;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAgBH,CAzBD;;KAAMN,M;AA2BN,eAAeA,MAAf","sourcesContent":["type buttonProps={\n    width?:number;\n    height?:number;\n    rounded?:boolean;\n    textcolor?:string;\n\tbackgroundcolor?:string;\n    text:string;\n    onclick?:()=>void;\n}\n\nconst Button = (\n    {width = 130,\n        height = 50,\n        rounded = true,  \n        textcolor = 'white',\n\t\tbackgroundcolor='black',\n        text,\n\t\tonclick\n\t}:buttonProps)=>{\n    return(<div>\n        <button \n        style={{height:`${height}px`,\n        width:`${width}px`,\n       backgroundColor:backgroundcolor,\n        color:textcolor, \n\t\tborder:'none' , \n        borderRadius : `${rounded ? 5 : 0}px`,\n\t\toutline:'none',\n        cursor:'pointer'}}\n\t\tonClick={onclick}\n\t\t>\n            {text}\n        </button>\n    </div>)\n\n}\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}