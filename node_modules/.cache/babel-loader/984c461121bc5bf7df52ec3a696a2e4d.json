{"ast":null,"code":"var _jsxFileName = \"/Users/jshahcodes/projects/photopie-vercel/photopi/src/pages/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, memo, useEffect } from 'react';\nimport './Home.css';\nimport useSWR from 'swr';\nimport Image from '../atoms/Image';\nimport FlexTemplate from '../templates/FlexTemplate';\nimport Card from '../molecules/Card';\nimport Loader from '../atoms/Loader';\nimport NavBar from '../atoms/NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n\n  const [newData, changeData] = useState([]);\n  const [urlFetch, changeURLFetch] = useState(false);\n  const [searchString, ChangeSearchString] = useState();\n  const CLIENT_ID = process.env.REACT_APP_API_KEY;\n  const URL = `https://api.unsplash.com/photos?page=1&per_page=30&client_id=${CLIENT_ID}`;\n  const SearchUrl = `https://api.unsplash.com/search/photos?page=1&per_page=90&query=${searchString}&client_id=${CLIENT_ID}`; //fetch a certain url based on the requirements\n\n  const {\n    data\n  } = useSWR(urlFetch ? SearchUrl : URL, {\n    refreshInterval: 1000 * 360 * 30\n  }); //callback  from the child to get the search string \n\n  const clbck = searchString => {\n    changeURLFetch(true);\n    ChangeSearchString(searchString);\n  }; //go home \n\n\n  const home = () => {\n    changeURLFetch(false);\n  }; //\n\n\n  useEffect(() => {\n    changeData(data);\n  }, [data]); //show a loader if there is no data available\n\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 18\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      goHome: home,\n      dataToGet: clbck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(FlexTemplate, {\n      children: data && urlFetch ? newData === null || newData === void 0 ? void 0 : newData.results.map(i => /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          href: i.urls.regular,\n          height: 300,\n          width: 300,\n          downloadHref: i.links.download\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)) : newData === null || newData === void 0 ? void 0 : newData.map(i => /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          href: i.urls.regular,\n          height: 300,\n          width: 300,\n          downloadHref: i.links.download\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 3\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}, \"Nvf/me75DfaVoM5OImrYHpjb/Yg=\", false, function () {\n  return [useSWR];\n}));\n_c2 = Home;\nexport default Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Home$memo\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["/Users/jshahcodes/projects/photopie-vercel/photopi/src/pages/Home.tsx"],"names":["React","useState","memo","useEffect","useSWR","Image","FlexTemplate","Card","Loader","NavBar","Home","newData","changeData","urlFetch","changeURLFetch","searchString","ChangeSearchString","CLIENT_ID","process","env","REACT_APP_API_KEY","URL","SearchUrl","data","refreshInterval","clbck","home","results","map","i","urls","regular","links","download"],"mappings":"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","sourcesContent":["import React, {useState,memo,useEffect} from 'react'\nimport './Home.css'\n\nimport axios from 'axios';\nimport useSWR from 'swr';\nimport Image from '../atoms/Image';\nimport FlexTemplate from '../templates/FlexTemplate';\nimport Card from '../molecules/Card';\nimport Loader from '../atoms/Loader';\nimport NavBar from '../atoms/NavBar';\n\n\nconst Home = memo(()=>{\n  const [newData,changeData]=useState<any>([]);\n  const [urlFetch,changeURLFetch]=useState<boolean>(false);\n  const [searchString,ChangeSearchString]=useState<string>();\n    const CLIENT_ID = process.env.REACT_APP_API_KEY;\n    const URL = `https://api.unsplash.com/photos?page=1&per_page=30&client_id=${CLIENT_ID}`\n    const SearchUrl=`https://api.unsplash.com/search/photos?page=1&per_page=90&query=${searchString}&client_id=${CLIENT_ID}`\n\n    //fetch a certain url based on the requirements\n    const {data} = useSWR(urlFetch?SearchUrl:URL,{\n        refreshInterval: 1000 * 360 *30, \n      });\n\n//callback  from the child to get the search string \n      const clbck=(searchString:string)=>{\n        changeURLFetch(true);\n        ChangeSearchString(searchString);\n      }\n  //go home \n  const home=()=>{\n    changeURLFetch(false);\n  }\n      //\n    useEffect(()=>{\n       changeData(data);\n        },[data]) \n\n//show a loader if there is no data available\n    if(!data){\n          return <Loader/>\n        }\n\nreturn(\n  <>\n <NavBar goHome={home} dataToGet={clbck}/>\n<FlexTemplate>\n{data && urlFetch ?newData?.results.map((i: { urls: { regular: string; }; links: { download: string | undefined; }; })=>(\n    <Card>\n    <Image href={i.urls.regular} height={300} width={300} downloadHref={i.links.download}/>\n    </Card>\n)):newData?.map((i: { urls: { regular: string; }; links: { download: string | undefined; }; })=>(\n  <Card>\n  <Image href={i.urls.regular} height={300} width={300} downloadHref={i.links.download}/>\n  </Card>))}\n</FlexTemplate>\n</>\n);\n})\nexport default Home;"]},"metadata":{},"sourceType":"module"}