{"ast":null,"code":"/**\n * Due to bug https://bugs.chromium.org/p/chromium/issues/detail?id=678075,\n * it's not reliable to detect if the browser is currently online or offline\n * based on `navigator.onLine`.\n * As a work around, we always assume it's online on first load, and change\n * the status upon `online` or `offline` events.\n */\nvar online = true;\n\nvar isOnline = function isOnline() {\n  return online;\n};\n\nvar isDocumentVisible = function isDocumentVisible() {\n  if (typeof document !== 'undefined' && document.visibilityState !== undefined) {\n    return document.visibilityState !== 'hidden';\n  } // always assume it's visible\n\n\n  return true;\n};\n\nvar fetcher = function fetcher(url) {\n  return fetch(url).then(function (res) {\n    return res.json();\n  });\n};\n\nvar registerOnFocus = function registerOnFocus(cb) {\n  if (typeof window !== 'undefined' && window.addEventListener !== undefined && typeof document !== 'undefined' && document.addEventListener !== undefined) {\n    // focus revalidate\n    document.addEventListener('visibilitychange', function () {\n      return cb();\n    }, false);\n    window.addEventListener('focus', function () {\n      return cb();\n    }, false);\n  }\n};\n\nvar registerOnReconnect = function registerOnReconnect(cb) {\n  if (typeof window !== 'undefined' && window.addEventListener !== undefined) {\n    // reconnect revalidate\n    window.addEventListener('online', function () {\n      online = true;\n      cb();\n    }, false); // nothing to revalidate, just update the status\n\n    window.addEventListener('offline', function () {\n      return online = false;\n    }, false);\n  }\n};\n\nexport default {\n  isOnline: isOnline,\n  isDocumentVisible: isDocumentVisible,\n  fetcher: fetcher,\n  registerOnFocus: registerOnFocus,\n  registerOnReconnect: registerOnReconnect\n};","map":{"version":3,"sources":["/Users/jshahcodes/projects/photopie/photo-pie/node_modules/swr/esm/libs/web-preset.js"],"names":["online","isOnline","isDocumentVisible","document","visibilityState","undefined","fetcher","url","fetch","then","res","json","registerOnFocus","cb","window","addEventListener","registerOnReconnect"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,MAAM,GAAG,IAAb;;AACA,IAAIC,QAAQ,GAAG,SAAXA,QAAW,GAAY;AAAE,SAAOD,MAAP;AAAgB,CAA7C;;AACA,IAAIE,iBAAiB,GAAG,SAApBA,iBAAoB,GAAY;AAChC,MAAI,OAAOC,QAAP,KAAoB,WAApB,IACAA,QAAQ,CAACC,eAAT,KAA6BC,SADjC,EAC4C;AACxC,WAAOF,QAAQ,CAACC,eAAT,KAA6B,QAApC;AACH,GAJ+B,CAKhC;;;AACA,SAAO,IAAP;AACH,CAPD;;AAQA,IAAIE,OAAO,GAAG,SAAVA,OAAU,CAAUC,GAAV,EAAe;AAAE,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAAUC,GAAV,EAAe;AAAE,WAAOA,GAAG,CAACC,IAAJ,EAAP;AAAoB,GAArD,CAAP;AAAgE,CAA/F;;AACA,IAAIC,eAAe,GAAG,SAAlBA,eAAkB,CAAUC,EAAV,EAAc;AAChC,MAAI,OAAOC,MAAP,KAAkB,WAAlB,IACAA,MAAM,CAACC,gBAAP,KAA4BV,SAD5B,IAEA,OAAOF,QAAP,KAAoB,WAFpB,IAGAA,QAAQ,CAACY,gBAAT,KAA8BV,SAHlC,EAG6C;AACzC;AACAF,IAAAA,QAAQ,CAACY,gBAAT,CAA0B,kBAA1B,EAA8C,YAAY;AAAE,aAAOF,EAAE,EAAT;AAAc,KAA1E,EAA4E,KAA5E;AACAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiC,YAAY;AAAE,aAAOF,EAAE,EAAT;AAAc,KAA7D,EAA+D,KAA/D;AACH;AACJ,CATD;;AAUA,IAAIG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAUH,EAAV,EAAc;AACpC,MAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,gBAAP,KAA4BV,SAAjE,EAA4E;AACxE;AACAS,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,YAAY;AAC1Cf,MAAAA,MAAM,GAAG,IAAT;AACAa,MAAAA,EAAE;AACL,KAHD,EAGG,KAHH,EAFwE,CAMxE;;AACAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,YAAY;AAAE,aAAQf,MAAM,GAAG,KAAjB;AAA0B,KAA3E,EAA6E,KAA7E;AACH;AACJ,CAVD;;AAWA,eAAe;AACXC,EAAAA,QAAQ,EAAEA,QADC;AAEXC,EAAAA,iBAAiB,EAAEA,iBAFR;AAGXI,EAAAA,OAAO,EAAEA,OAHE;AAIXM,EAAAA,eAAe,EAAEA,eAJN;AAKXI,EAAAA,mBAAmB,EAAEA;AALV,CAAf","sourcesContent":["/**\n * Due to bug https://bugs.chromium.org/p/chromium/issues/detail?id=678075,\n * it's not reliable to detect if the browser is currently online or offline\n * based on `navigator.onLine`.\n * As a work around, we always assume it's online on first load, and change\n * the status upon `online` or `offline` events.\n */\nvar online = true;\nvar isOnline = function () { return online; };\nvar isDocumentVisible = function () {\n    if (typeof document !== 'undefined' &&\n        document.visibilityState !== undefined) {\n        return document.visibilityState !== 'hidden';\n    }\n    // always assume it's visible\n    return true;\n};\nvar fetcher = function (url) { return fetch(url).then(function (res) { return res.json(); }); };\nvar registerOnFocus = function (cb) {\n    if (typeof window !== 'undefined' &&\n        window.addEventListener !== undefined &&\n        typeof document !== 'undefined' &&\n        document.addEventListener !== undefined) {\n        // focus revalidate\n        document.addEventListener('visibilitychange', function () { return cb(); }, false);\n        window.addEventListener('focus', function () { return cb(); }, false);\n    }\n};\nvar registerOnReconnect = function (cb) {\n    if (typeof window !== 'undefined' && window.addEventListener !== undefined) {\n        // reconnect revalidate\n        window.addEventListener('online', function () {\n            online = true;\n            cb();\n        }, false);\n        // nothing to revalidate, just update the status\n        window.addEventListener('offline', function () { return (online = false); }, false);\n    }\n};\nexport default {\n    isOnline: isOnline,\n    isDocumentVisible: isDocumentVisible,\n    fetcher: fetcher,\n    registerOnFocus: registerOnFocus,\n    registerOnReconnect: registerOnReconnect\n};\n"]},"metadata":{},"sourceType":"module"}